#
# Configuration file for out.py
# Greg Sanders' Outdoor weather sensor status querier and logger
# Originated January 2020
#
## Let's talk about the hardware this is running on, shall we?
### Raspberry Pi 4 B+ w/ 1G RAM
### DROK Model: 200217 12V to 5V Buck Converter (Power suppy) ASIN: B01NALDSJ0
### Adafruit DS3231 RTC module (ADA3013)
### Adafruit BMP280 i2c/SPI Barometric Pressure and Altitude Sensor
### HiLetgo ADS1115 16-bit 4-channel i2c Analog to Digital Converter (ADC)
### Sparkfun SEN-08942 Weather Meters (Rain, Windspeed, Wind Direction)
### 
#
[Network]
## Network - Define your network parameters here.
# The web server will run on the accessible local address 0.0.0.0 
# which makes it available on any interface the hardware is configured to use.
#
SecretKey: amIprettysurethisk3yisn0longerne3d3dyesiAM
#
## Pins - list the Pi pin number(s) to which probes are sending data
#
[Pins]
#
PinA: 24
#PinB: 16
#
#
[Probes]
## Probes - Each 1-Wire device has a built-in serial number.  List those here.
#
ProbeA: DHT22
#ProbeB: 28-0114552d23aa
#ProbeC: 28-000009a28225
#
#
[ProbeNames]
## ProbeNames - Give the probes plain names to identify them.
#
ProbeAName: LWPi Temp
#ProbeBName: OUT Water Temp
#ProbeCName: Air-in-the-Box Temp #(a temp sensor on the RTC module)
#
#
[ProbeAdjust]
## ProbeAdjust - value to add/subtract from probe data to compensate for hardware error
#
Probe1Adjust: 0
#Probe2Adjust: 0
#Probe3Adjust: 0
#
#
[mySQL]
## mySQL - settings for the mySQL logger.  This is where temperature logging is stored.
#
Address: 192.168.1.150
#Port:
User: greg
Password: newpass10
Database: outdata
Table1: outraw
Table2: archive
LogFreq: 60
#
## WPServices - list of custom systemd services that make WeatherPi work.
#
[WPServices]
#fan: outBgFan.service
cam: outCam.service
main: outMainDATA.service
reboot: outWPBoot.service
#rain: rainMainDATA.service
socket: outSocket.service
#
